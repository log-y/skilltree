/* --- Additions & Modifications to style.css --- */
/* In style.css */

.skill-tree {
    list-style-type: none;
    padding: 0;
    margin: 0;
    display: flex; /* Keep as flex */
    /* justify-content: center; */ /* CHANGE THIS LINE */
    justify-content: flex-start;  /* TO THIS LINE */
    position: relative;
    z-index: 2; /* Keep nodes above lines */

    /* Add this: Ensures the flex container itself doesn't shrink smaller than its content,
       which can sometimes interact poorly with overflow and flex properties. */
    min-width: min-content;

    /* Optional: Add padding to the container if you want space on the left */
    /* If you want some visual padding on the left even when scrolled fully left,
       add padding to the CONTAINER, not the tree itself */
}

/* Optional: Add padding to the container */
.skill-tree-container {
    position: relative;
    width: 100%;
    margin: 0 auto;
    overflow-x: auto;
    padding-bottom: 20px;
    padding-left: 20px; /* Example: Add some space on the left */
    padding-right: 20px; /* Add symmetric space on the right */
    box-sizing: border-box; /* Include padding in width calculation */
}

/* Adjust SVG positioning if container padding is added */
#skill-lines, #ml-skill-lines {
    position: absolute;
    /* Setting top/left relative to the container's padding box */
    top: 0;
    left: 0;
    /* SVG dimensions need to match scrollable area */
    /* width/height set by JS */
    z-index: 1;
    pointer-events: none;
    overflow: visible;
}

/* Style for collapsed state */
li.collapsed > ul {
    display: none; /* Hide the direct child UL */
}

/* Indicate nodes with children are clickable */
.node.has-children {
    cursor: pointer;
    position: relative; /* Needed for indicator positioning */
    /* Optional: Slightly different look? */
    /* background-color: #eefbff; */
}

/* Optional: Add a visual indicator (+/-) */
.node.has-children::before {
    content: ''; /* Minus sign - expanded by default */
    display: inline-block;
    position: absolute;
    top: 2px;
    right: 5px;
    font-size: 1.1em; /* Adjust size as needed */
    line-height: 1;
    color: #868e96; /* Grey color */
    font-weight: bold;
    padding: 0 3px;
    border-radius: 3px;
    /* background-color: #f1f3f5; */ /* Subtle background */
    /* border: 1px solid #dee2e6; */
    transition: transform 0.2s ease-in-out;
}

li.collapsed > .node.has-children::before {
    content: ''; /* Plus sign when collapsed */
    color: #495057;
}

/* Subtle rotation on hover for the icon (optional) */
.node.has-children:hover::before {
    transform: scale(1.1);
    color: #343a40;
}

/* Basic Reset & Body */
body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
                 Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: #f8f9fa;
    color: #343a40;
    padding: 20px;
    line-height: 1.6;
}

h1 {
    text-align: center;
    color: #495057;
    margin-bottom: 40px;
}

/* Container for the tree and SVG overlay */
.skill-tree-container {
    position: relative; /* Needed for absolute positioning of SVG */
    width: 100%;
    margin: 0 auto;
    overflow-x: auto; /* Allow horizontal scrolling if tree is wide */
    padding-bottom: 20px; /* Space for lines going down */
}

/* SVG Styling */
/* #skill-lines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    pointer-events: none;  
    overflow: visible;  
} */

#skill-lines line, #ml-skill-lines line {
    stroke: #adb5bd; /* Line color - grey */
    stroke-width: 2; /* Line thickness */
}


/* Tree Structure Styling */
.skill-tree {
    list-style-type: none;
    padding: 0;
    margin: 0;
    display: flex; /* Arrange top-level items horizontally */
    justify-content: center; /* Center top-level items */
    position: relative; /* Establish positioning context */
    z-index: 2; /* Nodes should be above lines */
}

.skill-tree ul {
    list-style-type: none;
    padding-top: 40px; /* Space for connecting line from parent */
    position: relative;
    display: flex; /* Arrange children horizontally */
    justify-content: center;
}

/* Add horizontal spacing between sibling nodes */
.skill-tree li + li {
    margin-left: 20px;
}
/* Add horizontal spacing between sibling sub-trees */
.skill-tree ul li + li {
     margin-left: 15px; /* Slightly less spacing for deeper levels */
}


.skill-tree li {
    text-align: center;
    position: relative; /* Needed for line connection points & tooltips */
    display: flex; /* Use flex to easily center node above children */
    flex-direction: column;
    align-items: center;
}

/* Node Styling */
.node {
    background-color: #ffffff;
    border: 1px solid #dee2e6;
    border-radius: 8px; /* Rounded corners */
    padding: 10px 15px;
    display: inline-block; /* Fit content width */
    min-width: 80px; /* Minimum width */
    cursor: default; /* Indicate non-interactive text, hover handled separately */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    transition: box-shadow 0.2s ease-in-out;
    position: relative; /* Context for tooltip */
    z-index: 3; /* Ensure node is clickable above lines/SVG */
}

.node:hover {
    border-color: #4dabf7; /* Highlight border on hover */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Tooltip Styling (using ::after pseudo-element) */
.node::after {
    content: attr(data-source); /* Get text from data-source attribute */
    position: absolute;
    bottom: 110%; /* Position above the node */
    left: 50%;
    transform: translateX(-50%); /* Center the tooltip */
    background-color: #343a40; /* Dark background */
    color: #ffffff; /* White text */
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.85em;
    white-space: nowrap; /* Prevent wrapping */
    opacity: 0; /* Hidden by default */
    visibility: hidden;
    transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
    z-index: 10; /* Ensure tooltip is on top */
    pointer-events: none; /* Don't let tooltip interfere with hover */
}

/* Show tooltip on node hover */
.node:hover::after {
    opacity: 1;
    visibility: visible;
}

/* Add some minimal responsiveness */
@media (max-width: 768px) {
     .skill-tree, .skill-tree ul {
        /* Stack vertically on smaller screens if needed */
        /* flex-direction: column; */
        /* align-items: center; */
        /* Note: Vertical stacking makes line drawing more complex */
        /* Keeping horizontal for now, relies on overflow-x */
    }
     .skill-tree li + li {
         margin-left: 10px;
    }
     .skill-tree ul {
         padding-top: 30px;
    }
      .node {
        padding: 8px 12px;
        font-size: 0.9em;
    }
}

